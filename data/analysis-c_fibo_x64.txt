--------------------------------------------------------------------------------
Profile data file 'callgrind.out.71444' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 32768 B, 64 B, 8-way associative
D1 cache: 49152 B, 64 B, 12-way associative
LL cache: 27262976 B, 64 B, 13-way associative
Timerange: Basic block 0 - 244715
Trigger: Program termination
Profiled target:  build/c_fibo_x64 (PID 71444, part 1)
Events recorded:  Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
Events shown:     Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
Event sort order: Ir Dr Dw I1mr D1mr D1mw ILmr DLmr DLmw Bc Bcm Bi Bim
Thresholds:       99 0 0 0 0 0 0 0 0 0 0 0 0
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                 Dr               Dw               I1mr           D1mr           D1mw         ILmr           DLmr           DLmw         Bc              Bcm            Bi           Bim          
--------------------------------------------------------------------------------
2,027,647 (100.0%) 746,481 (100.0%) 392,868 (100.0%) 1,143 (100.0%) 1,510 (100.0%) 590 (100.0%) 1,134 (100.0%) 1,311 (100.0%) 553 (100.0%) 81,431 (100.0%) 3,367 (100.0%) 296 (100.0%) 148 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir               Dr               Dw               I1mr        D1mr         D1mw         ILmr        DLmr         DLmw         Bc              Bcm          Bi           Bim          file:function
--------------------------------------------------------------------------------
520,000 (25.65%) 220,000 (29.47%) 100,000 (25.45%)  1 ( 0.09%)   0            0           1 ( 0.09%)   0            0          20,000 (24.56%)   6 ( 0.18%)   .           .           fibo.c:dequeue [/home/ivanv/ts/pancake_testing/pancake_hi_odroidc4/pancake_hi/build/c_fibo_x64]
520,000 (25.65%) 200,000 (26.79%) 120,000 (30.54%)  2 ( 0.17%)   0            0           2 ( 0.18%)   0            0          20,000 (24.56%)   6 ( 0.18%)   .           .           fibo.c:enqueue [/home/ivanv/ts/pancake_testing/pancake_hi_odroidc4/pancake_hi/build/c_fibo_x64]
300,000 (14.80%) 120,000 (16.08%)  40,000 (10.18%)  1 ( 0.09%)   0            0           1 ( 0.09%)   .            .               .            .            .           .           fibo.c:isFull [/home/ivanv/ts/pancake_testing/pancake_hi_odroidc4/pancake_hi/build/c_fibo_x64]
280,000 (13.81%) 120,000 (16.08%)  40,000 (10.18%)  .            .            .           .            .            .               .            .            .           .           fibo.c:isEmpty [/home/ivanv/ts/pancake_testing/pancake_hi_odroidc4/pancake_hi/build/c_fibo_x64]
250,047 (12.33%)  50,001 ( 6.70%)  80,035 (20.37%)  6 ( 0.52%)   0            1 ( 0.17%)  6 ( 0.53%)   0            0          10,034 (12.32%)  15 ( 0.45%)   .           .           fibo.c:main [/home/ivanv/ts/pancake_testing/pancake_hi_odroidc4/pancake_hi/build/c_fibo_x64]
 36,847 ( 1.82%)   6,702 ( 0.90%)       6 ( 0.00%)  5 ( 0.44%)  72 ( 4.77%)   1 ( 0.17%)  5 ( 0.44%)  72 ( 5.49%)   1 ( 0.18%) 10,545 (12.95%) 977 (29.02%)   .           .           ./elf/./elf/dl-tunables.c:__GI___tunables_init [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
 22,941 ( 1.13%)   7,704 ( 1.03%)   3,222 ( 0.82%) 18 ( 1.57%) 171 (11.32%)   8 ( 1.36%) 18 ( 1.59%) 154 (11.75%)   3 ( 0.54%)  3,495 ( 4.29%) 236 ( 7.01%)   .           .           ./elf/./elf/dl-lookup.c:do_lookup_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
 20,093 ( 0.99%)   4,137 ( 0.55%)   2,301 ( 0.59%) 11 ( 0.96%)  94 ( 6.23%)   8 ( 1.36%) 11 ( 0.97%)  89 ( 6.79%)   1 ( 0.18%)  2,403 ( 2.95%) 167 ( 4.96%)   .           .           ./elf/./elf/dl-lookup.c:_dl_lookup_symbol_x [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
 17,517 ( 0.86%)   4,380 ( 0.59%)   2,023 ( 0.51%) 21 ( 1.84%) 405 (26.82%) 248 (42.03%) 21 ( 1.85%) 385 (29.37%) 242 (43.76%)  3,724 ( 4.57%)  68 ( 2.02%) 147 (49.66%) 48 (32.43%)  ./elf/../sysdeps/x86_64/dl-machine.h:_dl_relocate_object
  9,831 ( 0.48%)   2,336 ( 0.31%)     357 ( 0.09%) 17 ( 1.49%) 252 (16.69%)   0          17 ( 1.50%) 240 (18.31%)   0           1,772 ( 2.18%)  91 ( 2.70%)   .           .           ./elf/./elf/do-rel.h:_dl_relocate_object
  5,207 ( 0.26%)   1,109 ( 0.15%)       0          43 ( 3.76%)  44 ( 2.91%)   0          42 ( 3.70%)  37 ( 2.82%)   0             603 ( 0.74%) 126 ( 3.74%)  37 (12.50%) 22 (14.86%)  ./string/../sysdeps/x86_64/strcmp.S:strcmp [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  4,768 ( 0.24%)   1,584 ( 0.21%)     540 ( 0.14%)  6 ( 0.52%)  37 ( 2.45%)   2 ( 0.34%)  6 ( 0.53%)  31 ( 2.36%)   1 ( 0.18%)    621 ( 0.76%)  37 ( 1.10%)   .           .           ./elf/./elf/dl-lookup.c:check_match [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  3,836 ( 0.19%)   1,016 ( 0.14%)       0           1 ( 0.09%)   1 ( 0.07%)   0           1 ( 0.09%)   1 ( 0.08%)   0           1,208 ( 1.48%) 131 ( 3.89%)   .           .           ./elf/./elf/dl-tunables.h:__GI___tunables_init
  3,085 ( 0.15%)     499 ( 0.07%)      78 ( 0.02%) 10 ( 0.87%)   8 ( 0.53%)   0          10 ( 0.88%)   8 ( 0.61%)   0           1,154 ( 1.42%)  96 ( 2.85%)   .           .           ./elf/../sysdeps/x86/dl-cacheinfo.h:intel_check_word.constprop.0 [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  2,309 ( 0.11%)     789 ( 0.11%)     244 ( 0.06%) 20 ( 1.75%)  29 ( 1.92%)  21 ( 3.56%) 20 ( 1.76%)  28 ( 2.14%)  21 ( 3.80%)    404 ( 0.50%)  84 ( 2.49%)   .           .           ./elf/./elf/dl-version.c:_dl_check_map_versions [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  2,222 ( 0.11%)       0                0           2 ( 0.17%)   0            0           2 ( 0.18%)   0            0             345 ( 0.42%)  41 ( 1.22%)   .           .           ./elf/../bits/stdlib-bsearch.h:intel_check_word.constprop.0
  1,546 ( 0.08%)     328 ( 0.04%)     164 ( 0.04%) 41 ( 3.59%)  24 ( 1.59%)  15 ( 2.54%) 41 ( 3.62%)  24 ( 1.83%)  15 ( 2.71%)    316 ( 0.39%)  99 ( 2.94%)   .           .           ./elf/./elf/dl-load.c:_dl_map_object_from_fd [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
  1,195 ( 0.06%)     267 ( 0.04%)     140 ( 0.04%) 71 ( 6.21%)  32 ( 2.12%)   8 ( 1.36%) 71 ( 6.26%)  21 ( 1.60%)   8 ( 1.45%)    258 ( 0.32%)  95 ( 2.82%)  11 ( 3.72%)  7 ( 4.73%)  ./elf/./elf/rtld.c:dl_main [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    948 ( 0.05%)     171 ( 0.02%)     100 ( 0.03%) 34 ( 2.97%)   1 ( 0.07%)   7 ( 1.19%) 34 ( 3.00%)   1 ( 0.08%)   7 ( 1.27%)    228 ( 0.28%)  46 ( 1.37%)   .           .           ./elf/./elf/dl-deps.c:_dl_map_object_deps [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    883 ( 0.04%)     319 ( 0.04%)     148 ( 0.04%)  5 ( 0.44%)  44 ( 2.91%)  22 ( 3.73%)  5 ( 0.44%)  44 ( 3.36%)  22 ( 3.98%)    197 ( 0.24%)   7 ( 0.21%)   .           .           ./elf/../sysdeps/x86_64/dl-machine.h:_dl_start
    828 ( 0.04%)     122 ( 0.02%)       0           4 ( 0.35%)   9 ( 0.60%)   0           4 ( 0.35%)   9 ( 0.69%)   0             222 ( 0.27%)  26 ( 0.77%)   .           .           ./elf/./elf/dl-cache.c:_dl_cache_libcmp [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    815 ( 0.04%)     165 ( 0.02%)       0           2 ( 0.17%)  20 ( 1.32%)   0           2 ( 0.18%)  20 ( 1.53%)   0             155 ( 0.19%)   9 ( 0.27%)   .           .           ./elf/./elf/do-rel.h:_dl_start
    814 ( 0.04%)       0              184 ( 0.05%)  0            0            0           0            0            0              85 ( 0.10%)   .            .           .           ./elf/../sysdeps/generic/dl-protected.h:do_lookup_x
    768 ( 0.04%)     140 ( 0.02%)     128 ( 0.03%) 37 ( 3.24%)   0            9 ( 1.53%) 37 ( 3.26%)   0            9 ( 1.63%)    100 ( 0.12%)  52 ( 1.54%)   .           .           ./elf/./elf/dl-hwcaps.c:_dl_important_hwcaps [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    681 ( 0.03%)     205 ( 0.03%)      93 ( 0.02%) 15 ( 1.31%)   1 ( 0.07%)   4 ( 0.68%) 15 ( 1.32%)   1 ( 0.08%)   4 ( 0.72%)     90 ( 0.11%)   7 ( 0.21%)   .           .           ./elf/./elf/dl-load.c:open_path [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]
    663 ( 0.03%)     145 ( 0.02%)      95 ( 0.02%) 21 ( 1.84%)   5 ( 0.33%)   4 ( 0.68%) 21 ( 1.85%)   5 ( 0.38%)   4 ( 0.72%)     79 ( 0.10%)  25 ( 0.74%)   .           .           ./elf/./elf/dl-load.c:open_verify.constprop.0 [/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2]

--------------------------------------------------------------------------------
-- Auto-annotated source: fibo.c
--------------------------------------------------------------------------------
Ir               Dr              Dw              I1mr       D1mr       D1mw       ILmr       DLmr       DLmw       Bc              Bcm         Bi Bim 

-- line 6 ----------------------------------------
      .               .               .          .          .          .          .          .          .               .           .          .          .           #define MAX_SIZE 32
      .               .               .          .          .          .          .          .          .               .           .          .          .           #define FIBO_NUM 10000
      .               .               .          .          .          .          .          .          .               .           .          .          .           typedef struct {
      .               .               .          .          .          .          .          .          .               .           .          .          .               uint64_t items[MAX_SIZE];
      .               .               .          .          .          .          .          .          .               .           .          .          .               uint32_t head;
      .               .               .          .          .          .          .          .          .               .           .          .          .               uint32_t tail;
      .               .               .          .          .          .          .          .          .               .           .          .          .           } queue;
      .               .               .          .          .          .          .          .          .               .           .          .          .           
 80,000 ( 3.95%)      0          40,000 (10.18%) .          .          .          .          .          .               .           .          .          .           bool isEmpty(queue *q) {
160,000 ( 7.89%) 80,000 (10.72%)      .          .          .          .          .          .          .               .           .          .          .               return (q->head % MAX_SIZE) == (q->tail % MAX_SIZE);
 40,000 ( 1.97%) 40,000 ( 5.36%)      .          .          .          .          .          .          .               .           .          .          .           }
      .               .               .          .          .          .          .          .          .               .           .          .          .           
 80,000 ( 3.95%)      0          40,000 (10.18%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .           bool isFull(queue *q) {
180,000 ( 8.88%) 80,000 (10.72%)      .          .          .          .          .          .          .               .           .          .          .               return ((q->tail + 1) % MAX_SIZE) == (q->head % MAX_SIZE);
 40,000 ( 1.97%) 40,000 ( 5.36%)      .          .          .          .          .          .          .               .           .          .          .           }
      .               .               .          .          .          .          .          .          .               .           .          .          .           
120,000 ( 5.92%)      0          60,000 (15.27%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .           void enqueue(queue *q, uint64_t value) {
100,000 ( 4.93%) 20,000 ( 2.68%) 20,000 ( 5.09%) 0          0          0          0          0          0          20,000 (24.56%)  6 ( 0.18%) .          .               if (isFull(q)) {
300,000 (14.80%) 120,000 (16.08%) 40,000 (10.18%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .           => fibo.c:isFull (20,000x)
      .               .               .          .          .          .          .          .          .               .           .          .          .                   printf("queue is full\n");
      .               .               .          .          .          .          .          .          .               .           .          .          .                   return;
      .               .               .          .          .          .          .          .          .               .           .          .          .               }
      .               .               .          .          .          .          .          .          .               .           .          .          .           
120,000 ( 5.92%) 80,000 (10.72%) 20,000 ( 5.09%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .               q->items[q->tail] = value;
140,000 ( 6.90%) 60,000 ( 8.04%) 20,000 ( 5.09%) .          .          .          .          .          .               .           .          .          .               q->tail = (q->tail + 1) % MAX_SIZE;
 40,000 ( 1.97%) 40,000 ( 5.36%)      .          .          .          .          .          .          .               .           .          .          .           }
      .               .               .          .          .          .          .          .          .               .           .          .          .           
100,000 ( 4.93%)      0          40,000 (10.18%) .          .          .          .          .          .               .           .          .          .           uint64_t dequeue(queue *q) {
100,000 ( 4.93%) 20,000 ( 2.68%) 20,000 ( 5.09%) 1 ( 0.09%) 0          0          1 ( 0.09%) 0          0          20,000 (24.56%)  6 ( 0.18%) .          .               if (isEmpty(q)) {
280,000 (13.81%) 120,000 (16.08%) 40,000 (10.18%) .          .          .          .          .          .               .           .          .          .           => fibo.c:isEmpty (20,000x)
      .               .               .          .          .          .          .          .          .               .           .          .          .                   printf("queue is empty\n");
      .               .               .          .          .          .          .          .          .               .           .          .          .                   return 0;
      .               .               .          .          .          .          .          .          .               .           .          .          .               }
120,000 ( 5.92%) 80,000 (10.72%) 20,000 ( 5.09%) .          .          .          .          .          .               .           .          .          .               uint64_t value = q->items[q->head];
140,000 ( 6.90%) 60,000 ( 8.04%) 20,000 ( 5.09%) .          .          .          .          .          .               .           .          .          .               q->head = (q->head + 1) % MAX_SIZE;
 20,000 ( 0.99%) 20,000 ( 2.68%)      .          .          .          .          .          .          .               .           .          .          .               return value;
 40,000 ( 1.97%) 40,000 ( 5.36%)      .          .          .          .          .          .          .               .           .          .          .           }
      .               .               .          .          .          .          .          .          .               .           .          .          .           
      7 ( 0.00%)      1 ( 0.00%)      2 ( 0.00%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .           int main() {
     38 ( 0.00%)      0              33 ( 0.01%) 1 ( 0.09%) 0          1 ( 0.17%) 1 ( 0.09%) 0          0              33 ( 0.04%) 10 ( 0.30%) .          .               queue my_queue = {0};
      1 ( 0.00%)      0               1 ( 0.00%) .          .          .          .          .          .               .           .          .          .               my_queue.head = 0;
      1 ( 0.00%)      0               1 ( 0.00%) .          .          .          .          .          .               .           .          .          .               my_queue.tail = 0;
      .               .               .          .          .          .          .          .          .               .           .          .          .           
      4 ( 0.00%)      0               1 ( 0.00%) .          .          .          .          .          .               .           .          .          .               enqueue(&my_queue, 0);  // F(0) = 0
     41 ( 0.00%)     16 ( 0.00%)      8 ( 0.00%) 3 ( 0.26%) 0          0          3 ( 0.26%) 0          0               1 ( 0.00%)  1 ( 0.03%) .          .           => fibo.c:enqueue (1x)
      4 ( 0.00%)      0               1 ( 0.00%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .               enqueue(&my_queue, 1);  // F(1) = 1
     41 ( 0.00%)     16 ( 0.00%)      8 ( 0.00%) 0          0          0          0          0          0               1 ( 0.00%)  1 ( 0.03%) .          .           => fibo.c:enqueue (1x)
      .               .               .          .          .          .          .          .          .               .           .          .          .           
 30,001 ( 1.48%) 10,000 ( 1.34%) 10,000 ( 2.55%) 1 ( 0.09%) 0          0          1 ( 0.09%) 0          0          10,000 (12.28%)  4 ( 0.12%) .          .               for (int i = 2; i <= FIBO_NUM; i++) {
 39,996 ( 1.97%)      0          19,998 ( 5.09%) .          .          .          .          .          .               .           .          .          .                   uint64_t a = dequeue(&my_queue);
399,960 (19.73%) 169,983 (22.77%) 69,993 (17.82%) 1 ( 0.09%) 0          0          1 ( 0.09%) 0          0           9,999 (12.28%)  2 ( 0.06%) .          .           => fibo.c:dequeue (9,999x)
 39,996 ( 1.97%)      0          19,998 ( 5.09%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .                   uint64_t b = dequeue(&my_queue);
399,960 (19.73%) 169,983 (22.77%) 69,993 (17.82%) 0          0          0          0          0          0           9,999 (12.28%)  2 ( 0.06%) .          .           => fibo.c:dequeue (9,999x)
 39,996 ( 1.97%) 19,998 ( 2.68%)  9,999 ( 2.55%) .          .          .          .          .          .               .           .          .          .                   uint64_t next_fib = a + b;
 49,995 ( 2.47%)  9,999 ( 1.34%)  9,999 ( 2.55%) .          .          .          .          .          .               .           .          .          .                   enqueue(&my_queue, b);
409,959 (20.22%) 159,984 (21.43%) 79,992 (20.36%) 0          0          0          0          0          0           9,999 (12.28%)  2 ( 0.06%) .          .           => fibo.c:enqueue (9,999x)
 49,995 ( 2.47%)  9,999 ( 1.34%)  9,999 ( 2.55%) .          .          .          .          .          .               .           .          .          .                   enqueue(&my_queue, next_fib);
409,959 (20.22%) 159,984 (21.43%) 79,992 (20.36%) 0          0          0          0          0          0           9,999 (12.28%)  2 ( 0.06%) .          .           => fibo.c:enqueue (9,999x)
      .               .               .          .          .          .          .          .          .               .           .          .          .               }
      .               .               .          .          .          .          .          .          .               .           .          .          .           
      .               .               .          .          .          .          .          .          .               .           .          .          .               // Dequeue twice to get to the last calculated Fibonacci number
      3 ( 0.00%)      0               1 ( 0.00%) .          .          .          .          .          .               .           .          .          .               dequeue(&my_queue);
     40 ( 0.00%)     17 ( 0.00%)      7 ( 0.00%) 0          0          0          0          0          0               1 ( 0.00%)  1 ( 0.03%) .          .           => fibo.c:dequeue (1x)
      4 ( 0.00%)      0               2 ( 0.00%) 1 ( 0.09%) 0          0          1 ( 0.09%) .          .               .           .          .          .               uint64_t fib = dequeue(&my_queue);
     40 ( 0.00%)     17 ( 0.00%)      7 ( 0.00%) 0          0          0          0          0          0               1 ( 0.00%)  1 ( 0.03%) .          .           => fibo.c:dequeue (1x)
      .               .               .          .          .          .          .          .          .               .           .          .          .           
      .               .               .          .          .          .          .          .          .               .           .          .          .               // printf("Fibonacci number F(%d): %lu\n", FIBO_NUM, fib);
      1 ( 0.00%)      .               .          .          .          .          .          .          .               .           .          .          .               return 0;
      5 ( 0.00%)      4 ( 0.00%)      0          0          0          0          0          0          0               1 ( 0.00%)  1 ( 0.03%) .          .           }

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./elf/../bits/stdlib-bsearch.h
  ./elf/../sysdeps/generic/dl-protected.h
  ./elf/../sysdeps/x86/dl-cacheinfo.h
  ./elf/../sysdeps/x86_64/dl-machine.h
  ./elf/./elf/dl-cache.c
  ./elf/./elf/dl-deps.c
  ./elf/./elf/dl-hwcaps.c
  ./elf/./elf/dl-load.c
  ./elf/./elf/dl-lookup.c
  ./elf/./elf/dl-tunables.c
  ./elf/./elf/dl-tunables.h
  ./elf/./elf/dl-version.c
  ./elf/./elf/do-rel.h
  ./elf/./elf/rtld.c
  ./string/../sysdeps/x86_64/strcmp.S

--------------------------------------------------------------------------------
Ir                 Dr               Dw               I1mr        D1mr       D1mw       ILmr        DLmr       DLmw       Bc              Bcm         Bi Bim 
--------------------------------------------------------------------------------
1,870,047 (92.23%) 710,001 (95.11%) 380,035 (96.73%) 10 ( 0.87%) 0          1 ( 0.17%) 10 ( 0.88%) 0          0          50,034 (61.44%) 27 ( 0.80%) .          .           events annotated

